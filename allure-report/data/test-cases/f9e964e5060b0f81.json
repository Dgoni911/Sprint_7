{"uid":"f9e964e5060b0f81","name":"Принятие заказа с невалидным ID курьера","fullName":"tests.test_accept_order.TestAcceptOrder#test_accept_order_invalid_courier_id","historyId":"7340bb1811a392153b914aaffb7f586b","time":{"start":1758527531679,"stop":1758527532059,"duration":380},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <tests.test_accept_order.TestAcceptOrder object at 0x00000284B94B7A80>, setup_courier_and_order = {'courier_id': 615723, 'login': 'nfosahwbuo', 'order_id': 546570, 'password': 'cxqkvfwree', ...}\n\n    @allure.title(\"Принятие заказа с невалидным ID курьера\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_accept_order_invalid_courier_id(self, setup_courier_and_order):\n        with allure.step(\"Попытаться принять заказ с невалидным ID курьера\"):\n            response = OrderApi.accept_order(\n                setup_courier_and_order[\"order_id\"],\n                \"invalid_id\"\n            )\n    \n        with allure.step(\"Проверить ошибку валидации\"):\n>           assert response.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests\\test_accept_order.py:48: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":false,"beforeStages":[{"name":"setup_courier_and_order","time":{"start":1758527530102,"stop":1758527531679,"duration":1577},"status":"passed","steps":[{"name":"Логин курьера: 'nfosahwbuo'","time":{"start":1758527530522,"stop":1758527530886,"duration":364},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"login","value":"'nfosahwbuo'"},{"name":"password","value":"'cxqkvfwree'"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"Создать заказ","time":{"start":1758527530886,"stop":1758527531243,"duration":357},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_data","value":"{'firstName': 'Евгений', 'lastName': 'Косач', 'address': 'Ленинградский проспект, 53', 'metroStation': 10, 'phone': '+79181234564', 'rentTime': 6, 'deliveryDate': '2024-09-30', 'comment': 'Тестовый заказ'}"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"Получить заказ по треку 824244","time":{"start":1758527531243,"stop":1758527531678,"duration":435},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"track_id","value":"824244"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":3}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","statusTrace":"self = <tests.test_accept_order.TestAcceptOrder object at 0x00000284B94B7A80>, setup_courier_and_order = {'courier_id': 615723, 'login': 'nfosahwbuo', 'order_id': 546570, 'password': 'cxqkvfwree', ...}\n\n    @allure.title(\"Принятие заказа с невалидным ID курьера\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_accept_order_invalid_courier_id(self, setup_courier_and_order):\n        with allure.step(\"Попытаться принять заказ с невалидным ID курьера\"):\n            response = OrderApi.accept_order(\n                setup_courier_and_order[\"order_id\"],\n                \"invalid_id\"\n            )\n    \n        with allure.step(\"Проверить ошибку валидации\"):\n>           assert response.status_code == 400\nE           assert 500 == 400\nE            +  where 500 = <Response [500]>.status_code\n\ntests\\test_accept_order.py:48: AssertionError","steps":[{"name":"Попытаться принять заказ с невалидным ID курьера","time":{"start":1758527531679,"stop":1758527532058,"duration":379},"status":"passed","steps":[{"name":"Принять заказ 546570 курьером 'invalid_id'","time":{"start":1758527531680,"stop":1758527532058,"duration":378},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_id","value":"546570"},{"name":"courier_id","value":"'invalid_id'"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1},{"name":"Проверить ошибку валидации","time":{"start":1758527532058,"stop":1758527532058,"duration":0},"status":"failed","statusMessage":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code\n","statusTrace":"  File \"C:\\Users\\Пользователь\\sprint_7\\tests\\test_accept_order.py\", line 48, in test_accept_order_invalid_courier_id\n    assert response.status_code == 400\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":3},"afterStages":[{"name":"setup_courier_and_order::0","time":{"start":1758527532066,"stop":1758527532852,"duration":786},"status":"passed","steps":[{"name":"Отменить заказ 824244","time":{"start":1758527532066,"stop":1758527532467,"duration":401},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"track_id","value":"824244"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"Удалить курьера 615723","time":{"start":1758527532469,"stop":1758527532846,"duration":377},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"courier_id","value":"615723"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":2}],"labels":[{"name":"epic","value":"Order Management"},{"name":"severity","value":"normal"},{"name":"feature","value":"Accept Order API"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_accept_order"},{"name":"subSuite","value":"TestAcceptOrder"},{"name":"host","value":"HOME-PC"},{"name":"thread","value":"9396-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_accept_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"ad5940fcad753adc","status":"failed","statusDetails":"AssertionError: assert 500 == 400\n +  where 500 = <Response [500]>.status_code","time":{"start":1758386116829,"stop":1758386117213,"duration":384}}],"categories":[{"name":"Product defects","matchedStatuses":[]}],"tags":[]},"source":"f9e964e5060b0f81.json","parameterValues":[]}