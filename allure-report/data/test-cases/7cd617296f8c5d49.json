{"uid":"7cd617296f8c5d49","name":"Принятие заказа с несуществующим ID заказа","fullName":"tests.test_accept_order.TestAcceptOrder#test_accept_order_invalid_order_id","historyId":"e4f726252d51a7f0f084ca15b11fa1cc","time":{"start":1758527537246,"stop":1758527537622,"duration":376},"status":"broken","statusMessage":"AttributeError: type object 'ExpectedResponses' has no attribute 'ORDER_NOT_EXIST'","statusTrace":"self = <tests.test_accept_order.TestAcceptOrder object at 0x00000284B95B4A70>, setup_courier_and_order = {'courier_id': 615725, 'login': 'zdvmgrkdtk', 'order_id': 546572, 'password': 'xknrvlvzhl', ...}\n\n    @allure.title(\"Принятие заказа с несуществующим ID заказа\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_accept_order_invalid_order_id(self, setup_courier_and_order):\n        with allure.step(\"Попытаться принять несуществующий заказ\"):\n            response = OrderApi.accept_order(\n                \"9999999999\",\n                setup_courier_and_order[\"courier_id\"]\n            )\n    \n        with allure.step(\"Проверить ошибку ненайденного заказа\"):\n>           assert response.status_code == ExpectedResponses.ORDER_NOT_EXIST[\"code\"]\nE           AttributeError: type object 'ExpectedResponses' has no attribute 'ORDER_NOT_EXIST'\n\ntests\\test_accept_order.py:73: AttributeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":1,"retriesStatusChange":true,"beforeStages":[{"name":"setup_courier_and_order","time":{"start":1758527535778,"stop":1758527537245,"duration":1467},"status":"passed","steps":[{"name":"Логин курьера: 'zdvmgrkdtk'","time":{"start":1758527536159,"stop":1758527536512,"duration":353},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"login","value":"'zdvmgrkdtk'"},{"name":"password","value":"'xknrvlvzhl'"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"Создать заказ","time":{"start":1758527536512,"stop":1758527536917,"duration":405},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_data","value":"{'firstName': 'Евгений', 'lastName': 'Косач', 'address': 'Ленинградский проспект, 53', 'metroStation': 10, 'phone': '+79181234564', 'rentTime': 6, 'deliveryDate': '2024-09-30', 'comment': 'Тестовый заказ'}"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"Получить заказ по треку 818049","time":{"start":1758527536918,"stop":1758527537245,"duration":327},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"track_id","value":"818049"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":3}],"testStage":{"status":"broken","statusMessage":"AttributeError: type object 'ExpectedResponses' has no attribute 'ORDER_NOT_EXIST'","statusTrace":"self = <tests.test_accept_order.TestAcceptOrder object at 0x00000284B95B4A70>, setup_courier_and_order = {'courier_id': 615725, 'login': 'zdvmgrkdtk', 'order_id': 546572, 'password': 'xknrvlvzhl', ...}\n\n    @allure.title(\"Принятие заказа с несуществующим ID заказа\")\n    @allure.severity(allure.severity_level.NORMAL)\n    def test_accept_order_invalid_order_id(self, setup_courier_and_order):\n        with allure.step(\"Попытаться принять несуществующий заказ\"):\n            response = OrderApi.accept_order(\n                \"9999999999\",\n                setup_courier_and_order[\"courier_id\"]\n            )\n    \n        with allure.step(\"Проверить ошибку ненайденного заказа\"):\n>           assert response.status_code == ExpectedResponses.ORDER_NOT_EXIST[\"code\"]\nE           AttributeError: type object 'ExpectedResponses' has no attribute 'ORDER_NOT_EXIST'\n\ntests\\test_accept_order.py:73: AttributeError","steps":[{"name":"Попытаться принять несуществующий заказ","time":{"start":1758527537246,"stop":1758527537621,"duration":375},"status":"passed","steps":[{"name":"Принять заказ '9999999999' курьером 615725","time":{"start":1758527537246,"stop":1758527537621,"duration":375},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"order_id","value":"'9999999999'"},{"name":"courier_id","value":"615725"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":1},{"name":"Проверить ошибку ненайденного заказа","time":{"start":1758527537621,"stop":1758527537621,"duration":0},"status":"broken","statusMessage":"AttributeError: type object 'ExpectedResponses' has no attribute 'ORDER_NOT_EXIST'\n","statusTrace":"  File \"C:\\Users\\Пользователь\\sprint_7\\tests\\test_accept_order.py\", line 73, in test_accept_order_invalid_order_id\n    assert response.status_code == ExpectedResponses.ORDER_NOT_EXIST[\"code\"]\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"attachmentStep":false,"stepsCount":3},"afterStages":[{"name":"setup_courier_and_order::0","time":{"start":1758527537630,"stop":1758527538463,"duration":833},"status":"passed","steps":[{"name":"Отменить заказ 818049","time":{"start":1758527537630,"stop":1758527538070,"duration":440},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"track_id","value":"818049"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0},{"name":"Удалить курьера 615725","time":{"start":1758527538072,"stop":1758527538459,"duration":387},"status":"passed","steps":[],"attachments":[],"parameters":[{"name":"courier_id","value":"615725"}],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"attachmentStep":false,"stepsCount":2}],"labels":[{"name":"epic","value":"Order Management"},{"name":"severity","value":"normal"},{"name":"feature","value":"Accept Order API"},{"name":"parentSuite","value":"tests"},{"name":"suite","value":"test_accept_order"},{"name":"subSuite","value":"TestAcceptOrder"},{"name":"host","value":"HOME-PC"},{"name":"thread","value":"9396-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"tests.test_accept_order"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[{"uid":"de561ea5440bf8ff","status":"failed","statusDetails":"AssertionError: assert 500 == 404\n +  where 500 = <Response [500]>.status_code","time":{"start":1758386122470,"stop":1758386122870,"duration":400}}],"categories":[{"name":"Test defects","matchedStatuses":[]}],"tags":[]},"source":"7cd617296f8c5d49.json","parameterValues":[]}